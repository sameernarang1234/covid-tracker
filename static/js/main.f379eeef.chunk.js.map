{"version":3,"sources":["logo.svg","components/TodayDate.js","components/CovidDataTable.js","components/StateWisePage.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["extractDate","dateObj","Date","date","getDate","toString","month","parseInt","getMonth","year","getFullYear","day","getDay","TodayDate","style","backgroundColor","marginTop","color","paddingBottom","textAlign","paddingLeft","marginBottom","CovidDataTable","useState","dataArray","updateDataArray","useEffect","a","axios","get","headers","response","data","state_wise","key","arr","push","fetchData","console","log","className","map","item","index","state","active","deltaconfirmed","recovered","deaths","StateWisePage","stateTextInput","setStateTextInput","allStates","setState","display","setDisplay","isResultsVisible","setResultsVisible","stateData","setStateData","setColor","selectedSuggestion","setSelectedSuggestion","stateBuffer","i","length","indexOf","placeholder","value","onChange","event","target","onClick","onKeyDown","e","keyCode","onMouseEnter","onMouseLeave","Navbar","button1BGColor","setButton1BGColor","button2BGColor","setButton2BGColor","showNationalData","updateShowNationalData","borderWidth","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f379eeef.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","function extractDate() {\n    const dateObj = new Date();\n\n    const date = dateObj.getDate().toString();\n    const month = (parseInt(dateObj.getMonth()) + 1).toString();\n    const year = dateObj.getFullYear().toString();\n\n    let day = \"\";\n\n    switch (dateObj.getDay().toString()) {\n        case \"0\": {\n            day = \"Sunday\";\n            break;\n        }\n        case \"1\": {\n            day = \"Monday\";\n            break;\n        }\n        case \"2\": {\n            day = \"Tuesday\";\n            break;\n        }\n        case \"3\": {\n            day = \"Wednesday\";\n            break;\n        }\n        case \"4\": {\n            day = \"Thursday\";\n            break;\n        }\n        case \"5\": {\n            day = \"Friday\";\n            break;\n        }\n        case \"6\": {\n            day = \"Saturday\";\n            break;\n        }\n        default: {\n\n        }\n    }\n\n    const dateString = day + \", \" + date + \"/\" + month + \"/\" + year;\n\n    return dateString;\n}\n\nfunction TodayDate() {\n    return (\n        <h4 style={{\n            backgroundColor: \"#005a8d\",\n            marginTop: 0,\n            color: \"white\",\n            paddingBottom: 10,\n            textAlign: \"left\",\n            paddingLeft: 20,\n            marginBottom: 0\n        }}>{extractDate()}</h4>\n    )\n}\n\nexport default TodayDate;\n","import React, {useState, useEffect} from \"react\";\nimport \"./CovidDataTable.css\";\nimport axios from \"axios\";\n\nfunction CovidDataTable() {\n\n    const [dataArray, updateDataArray] = useState([]);\n\n    useEffect(() => {\n        async function fetchData() {\n            try {\n                const response = await axios.get(\n                    \"https://corona-virus-world-and-india-data.p.rapidapi.com/api_india\",\n                    {\n                        headers: {\n                            \"x-rapidapi-key\": \"3c3435447cmsh6a2d040285ccba9p1425fdjsnfdf6aecff286\",\n                            \"x-rapidapi-host\": \"corona-virus-world-and-india-data.p.rapidapi.com\",\n                            \"useQueryString\": true\n                        }\n                    }\n                );\n                const data = await response.data.state_wise;\n\n                let arr = []\n                for (let key in data) {\n                    arr.push(data[key]);\n                }\n                updateDataArray(arr);\n            } catch (err) {\n\n            }\n        }\n        fetchData();\n    }, []);\n\n    console.log(\"Near return\");\n    return (\n        <div className={\"mainDiv\"}>\n            <h2>Covid Data</h2>\n            <table>\n                <thead>\n                <tr>\n                    <th>State</th>\n                    <th>Active</th>\n                    <th>New Cases</th>\n                    <th>Recovered</th>\n                    <th>Deaths</th>\n                </tr>\n                </thead>\n                <tbody>\n                {\n                    dataArray.map((item, index) => {\n                        return (\n                            <tr key={index.toString()}>\n                                <td>{item.state}</td>\n                                <td>{item.active}</td>\n                                <td>{item.deltaconfirmed}</td>\n                                <td>{item.recovered}</td>\n                                <td>{item.deaths}</td>\n                            </tr>\n                        );\n                    })\n                }\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nexport default CovidDataTable;\n","import React, {useState, useEffect} from \"react\";\nimport \"./StateWisePage.css\";\nimport axios from \"axios\";\n\nfunction StateWisePage() {\n\n    const [stateTextInput, setStateTextInput] = useState(\"\");\n    const [allStates, setAllStates] = useState([\n        \"Maharashtra\",\n        \"Karnataka\",\n        \"Kerala\",\n        \"Tamil Nadu\",\n        \"Andhra Pradesh\",\n        \"Uttar Pradesh\",\n        \"Delhi\",\n        \"West Bengal\",\n        \"Chhattisgarh\",\n        \"Rajasthan\",\n        \"Gujarat\",\n        \"Madhya Pradesh\",\n        \"Odisha\",\n        \"Haryana\",\n        \"Bihar\",\n        \"Telangana\",\n        \"Punjab\",\n        \"Assam\",\n        \"Jharkhand\",\n        \"Uttarakhand\",\n        \"Jammu and Kashmir\",\n        \"Himachal Pradesh\",\n        \"Goa\",\n        \"Puducherry\",\n        \"Chandigarh\",\n        \"Tripura\",\n        \"Manipur\",\n        \"Meghalaya\",\n        \"Arunachal Pradesh\",\n        \"Nagaland\",\n        \"Ladakh\",\n        \"Sikkim\",\n        \"Mizoram\",\n        \"Dadra and Nagar Haveli and Daman and Diu\",\n        \"Lakshadweep\",\n        \"Andaman and Nicobar Islands\"\n    ]);\n    const [state, setState] = useState([]);\n    const [display, setDisplay] = useState(false);\n    const [isResultsVisible, setResultsVisible] = useState(false);\n    const [stateData, setStateData] = useState({});\n    const [color, setColor] = useState(\"#005a8d\");\n    const [selectedSuggestion, setSelectedSuggestion] = useState(-1);\n\n    async function fetchData(state) {\n        try {\n            console.log(\"INSIDE TRY\");\n            const response = await axios.get(\n                \"https://corona-virus-world-and-india-data.p.rapidapi.com/api_india\",\n                {\n                    headers: {\n                        \"x-rapidapi-key\": \"3c3435447cmsh6a2d040285ccba9p1425fdjsnfdf6aecff286\",\n                        \"x-rapidapi-host\": \"corona-virus-world-and-india-data.p.rapidapi.com\",\n                        \"useQueryString\": true\n                    }\n                }\n            );\n            const data = await response.data.state_wise;\n            setStateData(data[state]);\n        } catch (err) {\n            setStateData({});\n        }\n    }\n\n    useEffect(() => {\n        let stateBuffer = [];\n        for (let i = 0; i < allStates.length; i++) {\n            if (allStates[i].indexOf(stateTextInput) !== -1) {\n                stateBuffer.push(allStates[i]);\n            }\n        }\n        console.log(state);\n        setState(stateBuffer);\n    }, [stateTextInput]);\n\n    return (\n        <div className={\"mainDiv\"}>\n            <input\n                className={\"state_name\"}\n                placeholder={\"Search State\"}\n                value={stateTextInput}\n                onChange={(event) => {\n                    setDisplay(true);\n                    setStateTextInput(event.target.value)\n                }}\n                onClick={() => setDisplay(!display)}\n                onKeyDown={async (e) => {\n                    if (e.keyCode === 40) {\n                        if (selectedSuggestion < state.length) {\n                            setSelectedSuggestion((selectedSuggestion + 1));\n                        }\n                        else {\n                            setSelectedSuggestion(0);\n                        }\n                    }\n                    else if (e.keyCode === 38) {\n                        if (selectedSuggestion < 0) {\n                            setSelectedSuggestion(state.length - 1);\n                        }\n                        else {\n                            setSelectedSuggestion((selectedSuggestion - 1));\n                        }\n                    }\n                    else if (e.key === \"Enter\") {\n                        await setStateTextInput(state[selectedSuggestion]);\n                        await fetchData(state[selectedSuggestion]);\n                        setDisplay(false);\n                        setResultsVisible(true);\n\n                    }\n                }}\n            />\n            {\n                display ? (\n                    <div\n                        className={\"autoContainer\"}\n                    >\n                        {\n                            state.map((state, index) => {\n                                return (\n\n                                    selectedSuggestion !== index ? (\n                                        <div\n                                            className={\"option\"}\n                                            key={index}\n                                            onClick={() => {\n                                                setStateTextInput(state);\n                                                setDisplay(false);\n                                            }}\n                                        >\n                                            <span>{state}</span>\n                                        </div> ) : (\n                                            <div\n                                                className={\"option-selected option\"}\n                                                key={index}\n                                                onClick={() => {\n                                                    setStateTextInput(state);\n                                                    setDisplay(false);\n                                                }}\n                                                onKeyDown={(e) => {\n                                                    if (e.key === \"Enter\") {\n                                                        setStateTextInput(state);\n                                                        setDisplay(false);\n                                                    }\n                                                }}\n                                            >\n                                                <span>{state}</span>\n                                            </div>\n                                    )\n\n                                )\n                            })\n                        }\n                    </div>\n                ) : null\n            }\n            <button\n                onMouseEnter={() => setColor(\"#022e57\")}\n                onMouseLeave={() => setColor(\"#005a8d\")}\n                className={\"searchButton\"}\n                onClick={() => {\n                    fetchData(stateTextInput);\n                    setResultsVisible(true);\n                }}\n                style={{backgroundColor: color}}\n            ><h3>Get Results</h3></button>\n\n            {\n                isResultsVisible ? (\n                    <div>\n                        <h3>State: {stateData.state}</h3>\n                        <h3>Active Cases: {stateData.active}</h3>\n                        <h3>New Cases: {stateData.deltaconfirmed}</h3>\n                        <h3>Recovered: {stateData.recovered}</h3>\n                        <h3>Deaths: {stateData.deaths}</h3>\n                    </div>\n                ) : null\n            }\n\n        </div>\n    )\n}\n\nexport default StateWisePage;\n","import React, {useState} from \"react\";\nimport \"./Navbar.css\";\nimport TodayDate from \"./TodayDate\";\nimport CovidDataTable from \"./CovidDataTable\";\nimport StateWisePage from \"./StateWisePage\";\n\nfunction Navbar() {\n\n    const [button1BGColor, setButton1BGColor] = useState(\"#005a8d\");\n    const [button2BGColor, setButton2BGColor] = useState(\"#005a8d\");\n    const [showNationalData, updateShowNationalData] = useState(true);\n\n    return (\n        <div>\n            <div className={\"navbar-header\"}>\n                <h1 className={\"covid-heading\"}>Covid Tracker</h1>\n                <button\n                    className={\"buttton-heading overall-margin\"}\n                    style={{\n                        backgroundColor: button1BGColor,\n                        borderWidth: 0,\n                    }}\n                    onMouseEnter={() => setButton1BGColor(\"#022e57\")}\n                    onMouseLeave={() => setButton1BGColor(\"#005a8d\")}\n                    onClick={() => updateShowNationalData(true)}\n                >\n                    <h2>Overall</h2>\n                </button>\n                <button\n                    className={\"buttton-heading state-margin\"}\n                    style={{\n                        backgroundColor: button2BGColor,\n                        borderWidth: 0,\n                    }}\n                    onMouseEnter={() => setButton2BGColor(\"#022e57\")}\n                    onMouseLeave={() => setButton2BGColor(\"#005a8d\")}\n                    onClick={() => updateShowNationalData(false)}\n                >\n                    <h2>State wise</h2>\n                </button>\n            </div>\n            <TodayDate />\n            {\n                showNationalData ? (\n                    <CovidDataTable />\n                ) : (\n                    <StateWisePage />\n                )\n            }\n        </div>\n    )\n}\n\nexport default Navbar;\n","import logo from './logo.svg';\nimport './App.css';\nimport Navbar from \"./components/Navbar\";\nimport TodayDate from \"./components/TodayDate\";\nimport CovidDataTable from \"./components/CovidDataTable\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n        <Navbar />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}